@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}
@inject UserManager<PropmasterUser> UserManager
    @{ var user = await UserManager.GetUserAsync(User); }
    @if (user == null)
    {
        ViewData["Title"] = "Register";
        ViewData["Description"] = "Create a new account.";
    }
    else if (user.Type == "Admin")
    {
        ViewData["Title"] = "Create Agent Account";
        ViewData["Description"] = "Create a new Agent account.";
    }

    <h1>@ViewData["Title"]</h1>

    <div class="row">
        <div class="col-md-4">
            <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
                <h4>@ViewData["Description"]</h4>
                <hr />
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">

                    @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            listItems.Add(new SelectListItem
                            {
                                Text = "Client",
                                Value = "Client",
                                Selected = true
                            });
                            listItems.Add(new SelectListItem
                            {
                                Text = "Admin",
                                Value = "Admin"
                            });
                            listItems.Add(new SelectListItem
                            {
                                Text = "Agent",
                                Value = "Agent"
                            });

                    }
                    <label asp-for="Input.Type"></label>
                    <select asp-for="Input.Type" asp-items="listItems"></select>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Email"></label>
                    <input asp-for="Input.Email" class="form-control" />
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Password"></label>
                    <input asp-for="Input.Password" class="form-control" />
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.ConfirmPassword"></label>
                    <input asp-for="Input.ConfirmPassword" class="form-control" />
                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Name"></label>
                    <input asp-for="Input.Name" class="form-control" />
                    <span asp-validation-for="Input.Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.DOB"></label>
                    <input asp-for="Input.DOB" class="form-control" />
                    <span asp-validation-for="Input.DOB" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.PhoneNumber"></label>
                    <input asp-for="Input.PhoneNumber" class="form-control" />
                    <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
                </div>
                <button type="submit" class="btn btn-primary">Register</button>
            </form>
        </div>
        <div class="col-md-6 col-md-offset-2">
            <section>
                <h4>Use another service to register.</h4>
                <hr />
                @{
                    if ((Model.ExternalLogins?.Count ?? 0) == 0)
                    {
                        <div>
                            <p>
                                There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkID=532715">this article</a>
                                for details on setting up this ASP.NET application to support logging in via external services.
                            </p>
                        </div>
                    }
                    else
                    {
                        <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                            <div>
                                <p>
                                    @foreach (var provider in Model.ExternalLogins)
                                    {
                                        <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                    }
                                </p>
                            </div>
                        </form>
                    }
                }
            </section>
        </div>
    </div>

    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
    }
<script>
    document.addEventListener("DOMContentLoaded", function (event) {
        console.log('a');
        var urlParams = new URLSearchParams(window.location.search);
        var myParam = urlParams.get('success');
        if (myParam == "1") {
            alert("Agent account created!");
            window.history.pushState({}, document.title, "/");
        }
    });
</script>
